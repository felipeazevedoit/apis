// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using wpContextEntrega;

namespace wpContextEntrega.Migrations
{
    [DbContext(typeof(WebPixEntregaContext))]
    partial class WebPixEntregaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("wpEntity.CEP", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Bairro");

                    b.Property<string>("CEPFinal");

                    b.Property<string>("CEPInicial");

                    b.Property<string>("Cidade");

                    b.Property<string>("Descricao");

                    b.Property<string>("Estado");

                    b.Property<string>("Nome");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.Property<DateTime>("dataCriacao");

                    b.Property<DateTime>("dataEdicao");

                    b.Property<int>("idCliente");

                    b.HasKey("ID");

                    b.ToTable("CEP");
                });

            modelBuilder.Entity("wpEntity.Propiedade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Altura");

                    b.Property<bool>("Ativo");

                    b.Property<int>("Comprimento");

                    b.Property<string>("Descricao");

                    b.Property<int>("Largura");

                    b.Property<string>("Nome");

                    b.Property<int>("Peso");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.Property<DateTime>("dataCriacao");

                    b.Property<DateTime>("dataEdicao");

                    b.Property<int>("idCliente");

                    b.HasKey("ID");

                    b.ToTable("Propiedade");
                });

            modelBuilder.Entity("wpEntity.Transportadora", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.Property<int>("Status");

                    b.Property<string>("Tipo");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.Property<DateTime>("dataCriacao");

                    b.Property<DateTime>("dataEdicao");

                    b.Property<int>("idCliente");

                    b.HasKey("ID");

                    b.ToTable("Transportadora");
                });

            modelBuilder.Entity("wpEntity.Valor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.Property<int?>("cepID");

                    b.Property<DateTime>("dataCriacao");

                    b.Property<DateTime>("dataEdicao");

                    b.Property<int>("idCliente");

                    b.Property<int?>("propiedadeID");

                    b.Property<int?>("transportadoraID");

                    b.Property<double>("valor");

                    b.HasKey("ID");

                    b.HasIndex("cepID");

                    b.HasIndex("propiedadeID");

                    b.HasIndex("transportadoraID");

                    b.ToTable("Valor");
                });

            modelBuilder.Entity("wpEntity.Valor", b =>
                {
                    b.HasOne("wpEntity.CEP", "cep")
                        .WithMany()
                        .HasForeignKey("cepID");

                    b.HasOne("wpEntity.Propiedade", "propiedade")
                        .WithMany()
                        .HasForeignKey("propiedadeID");

                    b.HasOne("wpEntity.Transportadora", "transportadora")
                        .WithMany()
                        .HasForeignKey("transportadoraID");
                });
#pragma warning restore 612, 618
        }
    }
}
