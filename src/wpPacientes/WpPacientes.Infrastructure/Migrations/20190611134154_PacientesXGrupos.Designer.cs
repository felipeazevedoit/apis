// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpPacientes.Infrastructure;

namespace WpPacientes.Infrastructure.Migrations
{
    [DbContext(typeof(WpPacientesContext))]
    [Migration("20190611134154_PacientesXGrupos")]
    partial class PacientesXGrupos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WpPacientes.Entities.Convenio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataEdicao");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("IdCliente");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.HasKey("ID");

                    b.ToTable("Convenios");
                });

            modelBuilder.Entity("WpPacientes.Entities.Endereco", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<string>("Bairro");

                    b.Property<string>("CEP");

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataEdicao");

                    b.Property<string>("Descricao");

                    b.Property<string>("Estado");

                    b.Property<int>("IdCliente");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Local");

                    b.Property<string>("Nome");

                    b.Property<int>("NumeroLocal");

                    b.Property<int>("PacienteId");

                    b.Property<int>("Status");

                    b.Property<string>("Uf");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.HasKey("ID");

                    b.HasIndex("PacienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("WpPacientes.Entities.Grupo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataEdicao");

                    b.Property<string>("Descricao");

                    b.Property<int>("IdCliente");

                    b.Property<string>("Nome");

                    b.Property<string>("PerguntasIds");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.HasKey("ID");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("WpPacientes.Entities.Paciente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Altura");

                    b.Property<bool>("Ativo");

                    b.Property<string>("CPF");

                    b.Property<int>("CodigoExterno");

                    b.Property<int>("ConvenioId");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataEdicao");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("IdCliente");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Peso");

                    b.Property<string>("Sexo");

                    b.Property<string>("SobreNome");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.HasKey("ID");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("WpPacientes.Entities.PacientesXGrupos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GrupoId");

                    b.Property<int>("PacienteId");

                    b.HasKey("ID");

                    b.HasIndex("GrupoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("PacientesXGrupos");
                });

            modelBuilder.Entity("WpPacientes.Entities.Telefone", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataEdicao");

                    b.Property<string>("Descricao");

                    b.Property<int>("IdCliente");

                    b.Property<string>("Nome");

                    b.Property<string>("Numero");

                    b.Property<int>("PacienteId");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.HasKey("ID");

                    b.HasIndex("PacienteId")
                        .IsUnique();

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("WpPacientes.Entities.Endereco", b =>
                {
                    b.HasOne("WpPacientes.Entities.Paciente", "Paciente")
                        .WithOne("Endereco")
                        .HasForeignKey("WpPacientes.Entities.Endereco", "PacienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WpPacientes.Entities.PacientesXGrupos", b =>
                {
                    b.HasOne("WpPacientes.Entities.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WpPacientes.Entities.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WpPacientes.Entities.Telefone", b =>
                {
                    b.HasOne("WpPacientes.Entities.Paciente", "Paciente")
                        .WithOne("Telefone")
                        .HasForeignKey("WpPacientes.Entities.Telefone", "PacienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
