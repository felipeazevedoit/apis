// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpMedicos.Infrastructure;

namespace WpMedicos.Infrastructure.Migrations
{
    [DbContext(typeof(WpMedicosContext))]
    [Migration("20190503165857_ClinicaIdMedico")]
    partial class ClinicaIdMedico
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WpMedicos.Entities.Endereco", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<string>("Bairro");

                    b.Property<string>("CEP");

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataEdicao");

                    b.Property<string>("Descricao");

                    b.Property<string>("Estado");

                    b.Property<int>("IdCliente");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Local");

                    b.Property<int>("MedicoId");

                    b.Property<string>("Nome");

                    b.Property<int>("NumeroLocal");

                    b.Property<int>("Status");

                    b.Property<string>("Uf");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.HasKey("ID");

                    b.HasIndex("MedicoId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("WpMedicos.Entities.Especialidade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataEdicao");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("IdCliente");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.HasKey("ID");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("WpMedicos.Entities.Medico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<string>("CPF");

                    b.Property<string>("CRM");

                    b.Property<int>("ClinicaId");

                    b.Property<string>("ClinicaNome");

                    b.Property<int>("CodigoExterno");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataEdicao");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("IdCliente");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status");

                    b.Property<string>("UF_CRM");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.HasKey("ID");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("WpMedicos.Entities.MedicoXEspecialidade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EspecialidadeId");

                    b.Property<int>("MedicoId");

                    b.HasKey("ID");

                    b.HasIndex("EspecialidadeId");

                    b.HasIndex("MedicoId");

                    b.ToTable("MedicosXEspecialidades");
                });

            modelBuilder.Entity("WpMedicos.Entities.MedicoXPaciente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataEdicao");

                    b.Property<string>("Descricao");

                    b.Property<int>("IdCliente");

                    b.Property<int>("IdPaciente");

                    b.Property<int>("MedicoId");

                    b.Property<string>("Nome");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.HasKey("ID");

                    b.HasIndex("MedicoId");

                    b.ToTable("MedicoXPacientes");
                });

            modelBuilder.Entity("WpMedicos.Entities.Telefone", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataEdicao");

                    b.Property<string>("Descricao");

                    b.Property<int>("IdCliente");

                    b.Property<int>("MedicoId");

                    b.Property<string>("Nome");

                    b.Property<string>("Numero");

                    b.Property<int>("Status");

                    b.Property<int>("UsuarioCriacao");

                    b.Property<int>("UsuarioEdicao");

                    b.HasKey("ID");

                    b.HasIndex("MedicoId")
                        .IsUnique();

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("WpMedicos.Entities.Endereco", b =>
                {
                    b.HasOne("WpMedicos.Entities.Medico", "Medico")
                        .WithOne("Endereco")
                        .HasForeignKey("WpMedicos.Entities.Endereco", "MedicoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WpMedicos.Entities.MedicoXEspecialidade", b =>
                {
                    b.HasOne("WpMedicos.Entities.Especialidade", "Especialidade")
                        .WithMany()
                        .HasForeignKey("EspecialidadeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WpMedicos.Entities.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WpMedicos.Entities.MedicoXPaciente", b =>
                {
                    b.HasOne("WpMedicos.Entities.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WpMedicos.Entities.Telefone", b =>
                {
                    b.HasOne("WpMedicos.Entities.Medico", "Medico")
                        .WithOne("Telefone")
                        .HasForeignKey("WpMedicos.Entities.Telefone", "MedicoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
